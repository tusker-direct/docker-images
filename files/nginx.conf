worker_processes  1;
daemon off;

error_log  /var/log/nginx/error.log;

timer_resolution  500ms;

worker_rlimit_nofile 10240;
events {
    use epoll;
    worker_connections 10240;
}

http {
    include                   mime.types;
    default_type              application/octet-stream;

    server_name_in_redirect   off;
    server_tokens             off;

    log_format  main  '$proxy_protocol_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile                  on;
    tcp_nopush                on;

    keepalive_timeout         30;
    tcp_nodelay               off;

    client_body_timeout       10;
    client_header_timeout     10;

    client_header_buffer_size 128;
    client_max_body_size      20m;

    open_file_cache           max=1000 inactive=20s;
    open_file_cache_valid     30s;
    open_file_cache_min_uses  2;
    open_file_cache_errors    on;

    map $request $loggable {
      ~*hlf 0;
      default 1;
    }
    access_log  /var/log/nginx/access.log main if=$loggable;

    upstream unicorn_server {
      server unix:/app/tmp/sockets/app.sock fail_timeout=0;

      keepalive 16;
    }

    server {
      listen 80 proxy_protocol;
      listen 81 default_server http2 proxy_protocol;

      set_real_ip_from  10.0.0.0/8;
      real_ip_header    proxy_protocol;

      root /app/public;
      try_files $uri @unicorn_server;

      location @unicorn_server {
        proxy_pass http://unicorn_server;
        proxy_set_header  Host $http_host;
        proxy_set_header X-Real-IP       $proxy_protocol_addr;
        proxy_set_header X-Forwarded-For $proxy_protocol_addr;
        proxy_redirect    off;
      }

      location = /favicon.ico {
        log_not_found off;
        access_log    off;
      }

      location = /robots.txt {
        allow         all;
        log_not_found off;
        access_log    off;
      }

      location ~ ^/(assets|images|javascripts|packs|stylesheets|swfs|system)/ {
        gzip_static on;
        expires max;
        add_header Cache-Control public;
        add_header Last-Modified "";
        add_header ETag "";
        break;
      }
    }
}
